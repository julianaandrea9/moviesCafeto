"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const got_1 = require("got");
const errors = __importStar(require("./errors"));
exports.default = (error) => {
    if (error instanceof got_1.HTTPError) {
        switch (error.statusCode) {
            case 400: {
                throw new errors.BadRequest();
            }
            case 401: {
                const { status_code, status_message, } = error.response.body;
                throw new errors.UnauthorizedError(status_code, status_message);
            }
            case 404: {
                const { status_code, status_message, } = error.response.body;
                throw new errors.NotFoundError(status_code, status_message);
            }
            case 408: {
                throw new errors.RequestTimeout();
            }
            case 429: {
                const retryAfter = parseInt(error.headers['retry-after'], 10);
                throw new errors.TooManyRequests(retryAfter);
            }
            default: break;
        }
    }
};
